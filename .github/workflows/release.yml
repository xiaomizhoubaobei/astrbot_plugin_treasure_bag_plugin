name: Python Project Release & Sign

on:
  push:
    branches:
      - main
  release:
    types: [published,edited]

permissions:
  id-token: write
  attestations: write

jobs:
  release_and_sign:
    runs-on: ubuntu-latest
    name: Release And Sign
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install build
        run: pip install build

      - name: Build sdist and wheel
        run: python -m build

      - name: Find built packages
        id: find_packages
        run: |
          SDIST_FILE=$(ls dist/*.tar.gz)
          WHEEL_FILE=$(ls dist/*.whl)
          echo "sdist_file=$SDIST_FILE" >> $GITHUB_OUTPUT
          echo "wheel_file=$WHEEL_FILE" >> $GITHUB_OUTPUT

      - name: Generate SHA256 Hashes
        run: |
          sha256sum ${{ steps.find_packages.outputs.sdist_file }} > SHA256SUMS
          sha256sum ${{ steps.find_packages.outputs.wheel_file }} >> SHA256SUMS

      - name: Zip Hash File
        run: zip hashes.zip SHA256SUMS

      - name: 提取版本号
        id: extract_version
        run: |
          filename=$(ls dist/astrbot_plugin_treasure_bag_plugin-*.whl)
          version=$(echo $filename | sed -e 's/.*-\([0-9]*\.[0-9]*\.[0-9]*\)-py3-none-any\.whl/\1/')
          echo "version=$version" >> $GITHUB_ENV

      - name: Attest Build Provenance
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: '${{ steps.find_packages.outputs.sdist_file }}'

      - name: Generate Generic Attestation
        uses: actions/attest@v2
        with:
          subject-path: '${{ steps.find_packages.outputs.sdist_file }}'
          predicate-type: 'https://example.com/predicate/v1'
          predicate: '{"example":"predicate"}'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install pip-licenses

      - name: Generate Python SBOM
        uses: CycloneDX/gh-python-generate-sbom@v2
        with:
          input: ./requirements.txt
          output: ./sbom.json
          format: json

      - name: Create Electronic Signature
        uses: shrink/actions-document-sign@v1
        id: create-signature
        with:
          destination: .signature
          template: cute.html
          primary: #1e7e34
          secondary: #2f80ed
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

      - name: Upload Signature
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.create-signature.outputs.label }}.signature
          path: ${{ steps.create-signature.outputs.signature }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
     with:
          tag_name: v${{ env.version }}
          name: Release v${{ env.version }}
          body: |
            🎉 发布新版本${{ env.version }} 🎉

            这是我们新版本${{ env.version }}的发布说明。本次发布包含了以下更改：

            ${{ github.event.head_commit.message }}！
          draft: false
          prerelease: false

      - name: Upload sdist package to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.find_packages.outputs.sdist_file }}
          asset_name: $(basename ${{ steps.find_packages.outputs.sdist_file }})
          asset_content_type: application/gzip

      - name: Upload wheel package to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.find_packages.outputs.wheel_file }}
          asset_name: $(basename ${{ steps.find_packages.outputs.wheel_file }})
          asset_content_type: application/zip

      - name: Upload Signature to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.create-signature.outputs.signature }}
          asset_name: ${{ steps.create-signature.outputs.label }}.signature
          asset_content_type: application/octet-stream

      - name: Upload SBOM to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: sbom.json
          asset_name: sbom.json
          asset_content_type: application/json

      - name: Upload Hashes to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: hashes.zip
          asset_name: hashes.zip
          asset_content_type: application/zip

      - name: Sign packages with OpenPGP
        uses: oplik0/openpgp-action@v3
        id: sign_packages
        with:
          text: |
            ${{ steps.find_packages.outputs.sdist_file }}
            ${{ steps.find_packages.outputs.wheel_file }}
          key: ${{ secrets.PGP_PRIVATE_KEY }}
          passphrase: ${{ secrets.PGP_PASSPHRASE }}

      - name: Upload OpenPGP Signature to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.sign_packages.outputs.encrypted-text }}
          asset_name: packages.gpg
          asset_content_type: application/pgp-signature

      - name: Sign package using gh-action-sigstore-python
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: ${{ steps.find_packages.outputs.sdist_file }}
          release-signing-artifacts: true
          upload-signing-artifacts: true
          verify: true
          verify-cert-identity: https://github.com/${{ github.repository }}/.github/workflows/${{ github.workflow }}@${{ github.ref }}
          verify-oidc-issuer: https://token.actions.githubusercontent.com